---
title: "Figure Formatting Maps"
format: html
---

```{r setup, include=FALSE}
library(formatR)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", fig.show = "hold", time_it = TRUE, dpi = 100)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = T, collapse = TRUE)
knitr::opts_knit$set(root.dir = '/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/')
library(rgl)
library(terra)
library(lme4)
library(MASS)
library(lmerTest)
library(MuMIn)
library(terra)
library(sf)
library(ggplot2)
library(ggeffects)
library(merTools)
library(glmnet)
library(stats)
library(ggcorrplot)
library(RColorBrewer)
library(webshot)
library(kableExtra)
library(formatR)
library(dplyr)
library(stringr)
library(flextable)
library(ggnewscale)
library(tidyterra)
library(ggpubr)
library(ggspatial)
library(patchwork)
library(randomForest)
library(pdp)

knitr::knit_hooks$set(webgl = hook_webgl)
rgl::setupKnitr(autoprint = TRUE)

terraOptions(
    memfrac = 0.1
)

setGDALconfig("GDAL_PAM_ENABLED", "FALSE")

#tmap_options(raster.max.cells = c(plot = 1e7, view = 1e6))
```


### Models & Data

```{r}

mod7 <- get(load("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/models/All_WA_Model7d1_Spline.RData"))
modw <- get(load("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/models/All_WA_Model_Wet_Spline.RData"))
modu <- get(load("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/models/All_WA_Model_Upl_Spline.RData"))

modd1 <- get(load("SOIL CARBON/All_WA/analysis/models/All_WA_Stocks_Model.RData"))
modd1w <- get(load("SOIL CARBON/All_WA/analysis/models/All_WA_Wet_Stocks_Model.RData"))
modd1u <- get(load("SOIL CARBON/All_WA/analysis/models/All_WA_Upl_Stocks_Model.RData"))

RFM <- get(load("SOIL CARBON/All_WA/analysis/models/ALl_WA_RandomForest.RData"))

GLM <- get(load("SOIL CARBON/All_WA/analysis/models/All_WA_Stocks_Model.RData"))
GLMw <- get(load("SOIL CARBON/All_WA/analysis/models/All_WA_Wet_Stocks_Model.RData"))
GLMu <- get(load("SOIL CARBON/All_WA/analysis/models/All_WA_Upl_Stocks_Model.RData"))

fit.lqmm <- get(load("SOIL CARBON/All_WA/analysis/models/mod7_fit_lqmm.RData"))

wa_dat <- read.csv("SOIL CARBON/All_WA/data/dataframes/All_WA_SOC_ExtractPreds.csv")
wa_stocks_dat <- read.csv("SOIL CARBON/All_WA/data/dataframes/All_WA_1m_stocks_preds.csv")
```


#### Spatial layers

```{r}
soc_preds <- list.files("SOIL CARBON/All_WA/data/Rasters/SOC_Predictions/", pattern = "sum_linear|sum_RF|pedon", full.names = TRUE) |> lapply(terra::rast) 

soc_preds_sm <- list()
for(i in 1:length(soc_preds)){
  soc_preds_sm[[i]] <- terra::aggregate(soc_preds[[i]], 6)
  names(soc_preds_sm[[i]]) <- "SOC"
}

names(soc_preds) <- list.files("SOIL CARBON/All_WA/data/Rasters/SOC_Predictions/", pattern = "sum_linear|sum_RF|pedon", full.names = F) |>
    str_remove(pattern = ".tif")

names(soc_preds_sm) <- list.files("SOIL CARBON/All_WA/data/Rasters/SOC_Predictions/", pattern = "sum_linear|sum_RF|pedon", full.names = F) |>
    str_remove(pattern = ".tif")
```


```{r}
hoh_poly <- st_read("SOIL CARBON/All_WA/data/Vectors/HOH_POLYGON_711.gpkg") |> st_transform("EPSG:2855")
mas_poly <- st_read("SOIL CARBON/All_WA/data/Vectors/Mashel_HUC12_2856.shp")
col_poly <- st_read("SOIL CARBON/All_WA/data/Vectors/ColvilleHUC_2855.shp")

hoh_stack_pedons <- rast("SOIL CARBON/All_WA/data/Rasters/PredictorStacks/hoh_stack_pedons_water_urban_mask_scale.tif")
mas_stack_pedons <- rast("SOIL CARBON/All_WA/data/Rasters/PredictorStacks/mas_stack_pedons_water_urban_mask_scale.tif")
col_stack_pedons <- rast("SOIL CARBON/All_WA/data/Rasters/PredictorStacks/col_stack_pedons_water_urban_mask_scale.tif")

hoh_stack_depths <- rast("SOIL CARBON/All_WA/data/Rasters/PredictorStacks/hoh_stack_depths_water_urban_mask_scale.tif")
mas_stack_depths <- rast("SOIL CARBON/All_WA/data/Rasters/PredictorStacks/mas_stack_depths_water_urban_mask_scale.tif")
col_stack_depths <- rast("SOIL CARBON/All_WA/data/Rasters/PredictorStacks/col_stack_depths_water_urban_mask_scale.tif")

hoh_wip <- rast("SOIL CARBON/All_WA/data/Rasters/Hoh_WIP_Final_2855_Mask.tif", lyrs = "WIP")
mas_wip <- rast("SOIL CARBON/All_WA/data/Rasters/Mashel_WIP_Final_2856_Mask.tif", lyrs = "WIP")
col_wip <- rast("SOIL CARBON/All_WA/data/Rasters/Colville_WIP_Final_2855_Mask.tif", lyrs = "WIP")

wip_list <- list("hoh_wip" = hoh_stack_depths$WIP*sd(wa_dat$WIP)+mean(wa_dat$WIP), 
                 "mas_wip" = mas_stack_depths$WIP*sd(wa_dat$WIP)+mean(wa_dat$WIP),
                 "col_wip" = col_stack_depths$WIP*sd(wa_dat$WIP)+mean(wa_dat$WIP))

hoh_wip_sm <- rast("SOIL CARBON/All_WA/data/Rasters/Hoh_WIP_Final_2855_Mask.tif", lyrs = "WIP")|> 
    aggregate(fact = 12)
mas_wip_sm <- rast("SOIL CARBON/All_WA/data/Rasters/Mashel_WIP_Final_2856_Mask.tif", lyrs = "WIP")|> 
    aggregate(fact = 12)
col_wip_sm <- rast("SOIL CARBON/All_WA/data/Rasters/Colville_WIP_Final_2855_Mask.tif", lyrs = "WIP")|> 
    aggregate(fact = 12)

hoh_hs <- rast("SOIL CARBON/All_WA/data/Rasters/Hoh_hillshade.tif")|> 
    resample(hoh_wip)
mas_hs <- rast("SOIL CARBON/All_WA/data/Rasters/Mas_hillshade.tif")
col_hs <- rast("SOIL CARBON/All_WA/data/Rasters/Col_hillshade.tif")

hs_list <- list("hoh_hs" = hoh_hs, "mas_hs" = mas_hs, "col_hs" = col_hs)

hoh_hs_sm <- rast("SOIL CARBON/All_WA/data/Rasters/Hoh_hillshade.tif")|> 
    aggregate(fact = 12) |> resample(hoh_wip_sm)
mas_hs_sm <- rast("SOIL CARBON/All_WA/data/Rasters/Mas_hillshade.tif")|> 
    aggregate(fact = 12)
col_hs_sm <- rast("SOIL CARBON/All_WA/data/Rasters/Col_hillshade.tif")|> 
    aggregate(fact = 12)


```


### Map Figures 

9 SOC Maps, 3 WIP Maps
- 3x linear, 1 WIP
- 3x RF, 1 WIP
- 3x pedons, 1 WIP

#### Small maps


```{r}
smallmapcrop <- function(wip, soc, hs){
    extent <- ext(soc[[1]]) 
    
    if (str_detect(names(soc), "hoh")){
        midx <- extent$xmax[[1]] - ((extent$xmax[[1]] - extent$xmin[[1]])/2)
        midy <- extent$ymax[[1]] - ((extent$ymax[[1]] - extent$ymin[[1]])/2) +5000
    } else if (str_detect(names(soc), "col")){
        midx <- extent$xmax[[1]] - ((extent$xmax[[1]] - extent$xmin[[1]])/2)
        midy <- extent$ymax[[1]] - ((extent$ymax[[1]] - extent$ymin[[1]])/2) -4700
    } else {
        midx <- extent$xmax[[1]] - ((extent$xmax[[1]] - extent$xmin[[1]])/2)
        midy <- extent$ymax[[1]] - ((extent$ymax[[1]] - extent$ymin[[1]])/2) 
    }
            
    df <- data.frame(x = midx, y = midy)
    pt <- vect(df, geom = c("x", "y"), crs = crs(wip))
    buffpt <- buffer(pt, 1000) 
    
    cropwip <- crop(wip, buffpt, mask = TRUE)
    cropsoc <- crop(soc[[1]], buffpt, mask = TRUE)
    crophs <- crop(hs[[1]], buffpt, mask = TRUE)
    names(cropsoc) <- "SOC"
    names(crophs) <- "hillshade"
    
    buffname <- paste0(str_sub(names(soc), 1, 3), "_buffpt")
    cropwipname <- paste0(str_sub(names(soc), 1, 3), "_cropwip")
    cropsocname <- paste0(str_sub(names(soc), 1, 3), "_cropsoc")
    crophsname <- paste0(str_sub(names(hs), 1, 3), "_crophs")
    
    pt_wip_soc <- list(buffpt, cropwip, cropsoc, crophs)
    names(pt_wip_soc) <- c(buffname, cropwipname, cropsocname, crophsname)
    return(pt_wip_soc)
}
```



```{r}
#| eval: false
# hohsubmap <- smallmapcrop(wip = hoh_wip_sm,
#                           soc = soc_preds_sm$hoh_SOCpredict_pedon_stocks)
# massubmap <- smallmapcrop(wip = mas_wip_sm, soc = soc_preds_sm$mas_SOCpredict_pedon_stocks)
# colsubmap <- smallmapcrop(wip = col_wip_sm, soc = soc_preds_sm$col_SOCpredict_pedon_stocks)

submap_list <- list()
submaps <- for(i in 1:length(soc_preds)){
  wip <- wip_list[str_detect(names(wip_list), str_sub(names(soc_preds[i]), 1, 3))][[1]] # pulls out the appropriate WIP
  hs <- hs_list[str_detect(names(hs_list), str_sub(names(soc_preds[i]), 1, 3))][[1]]
  submap_list[[i]] <- smallmapcrop(wip = wip, soc = soc_preds[i], hs = hs)
}

plot(submap_list[[6]]$hoh_cropwip)
plot(submap_list[[6]]$hoh_cropsoc)
plot(submap_list[[6]]$hil_crophs)
```


Large mapping function

```{r}
ggplot() + 
            geom_spatraster(data = soc_preds_sm$hoh_SOCpredict_pedon_stocks, aes(fill = lyr1), maxcell = 2e6)
```


```{r}
ggmaps <- function(data, sm_data, hs){
    rastname <- tools::toTitleCase(str_extract(deparse(substitute(data)), "hoh|mas|col"))
    rasttype <- str_extract(toupper(deparse(substitute(data))), "SOC|WIP|PEDON")
    
    if(rasttype == "WIP"){
        map <- ggplot() + 
            geom_spatraster(data = data, aes(fill = WIP), maxcell = 2e5) +
            scale_fill_distiller(palette = "YlGnBu",  na.value = NA, direction = 1,
                                 limits = c(0, 1), 
                                 name ='Wetland Intrinsic Potential') +
            ggnewscale::new_scale_fill() + 
            geom_spatraster(data = hs, aes(fill = hillshade), maxcell = 2e5,
                        show.legend = FALSE, alpha = 0.15) +
            scale_fill_distiller(palette = "Greys", na.value = NA)
        sm_map <- ggplot() + 
            geom_spatraster(data = sm_data[[2]], aes(fill = WIP), maxcell = 2e5) +
            scale_fill_distiller(palette = "YlGnBu",  na.value = NA, direction = 1,
                                 limits = c(0, 1)) + 
            ggnewscale::new_scale_fill() + 
            geom_spatraster(data = sm_data[[4]], aes(fill = hillshade), maxcell = 2e5,
                        show.legend = FALSE, alpha = 0.15) +
            scale_fill_distiller(palette = "Greys", na.value = NA) +
            theme_void() + theme(legend.position = "none")
        sm_vec <- geom_spatvector(data = sm_data[[1]], fill = NA, colour = "red", linewidth = 0.7)
    } else if(rasttype == "SOC" | rasttype == "PEDON") {
        map <- ggplot() + 
            geom_spatraster(data = data, aes(fill = SOC), maxcell = 2e5) +
            scale_fill_viridis_c(option = "inferno",  na.value = NA, 
                                 limits = c(0, 500), name = expression('SOC Stock (Mg ha'^-1*')')) +
            ggnewscale::new_scale_fill() + 
            geom_spatraster(data = hs, aes(fill = hillshade), maxcell = 2e5,
                        show.legend = FALSE, alpha = 0.15) +
            scale_fill_distiller(palette = "Greys", na.value = NA)
        sm_map <- ggplot() + 
            geom_spatraster(data = sm_data[[3]], aes(fill = SOC), maxcell = 2e5) +
            scale_fill_viridis_c(option = "inferno",  na.value = NA, 
                                 limits = c(0, 500)) + 
            ggnewscale::new_scale_fill() + 
            geom_spatraster(data = sm_data[[4]], aes(fill = hillshade), maxcell = 2e5,
                        show.legend = FALSE, alpha = 0.15) +
            scale_fill_distiller(palette = "Greys", na.value = NA) +
            theme_void() + theme(legend.position = "none")
        sm_vec <- geom_spatvector(data = sm_data[[1]], fill = NA, colour = "cyan", linewidth = 0.7)
    } else {
      print("no map")
    }
    
    legend <- cowplot::get_legend(map + theme(legend.direction = "horizontal",
                                              legend.background = element_blank(),
                                              legend.title.position = "top",
                                              legend.title = element_text(hjust = 0.35, size = 8), 
                                              legend.text = element_text(size = 6),
                                              legend.key.height = unit(0.3, "cm"),
                                              legend.key.width = unit(0.7, "cm")))
    
    if (rastname == "Hoh" & rasttype == "WIP") {
       lbrt <- c("left" = 0.4, "bottom" = 0.15, "right" = 0.75, "top" = 0.5)
       map <- map + 
           coord_sf(expand = FALSE) + 
           annotation_scale(location = "tr", 
                             pad_y = unit(0.15, "cm"), 
                             pad_x = unit(2, "cm"),
                             height = unit(0.1, "cm"))+
    annotation_north_arrow(height = unit(1, "cm"), width = unit(1, "cm"))
    } else if (rastname == "Mas" & rasttype == "WIP"){
        lbrt <- c("left" = -0.15, "bottom" = -0.15, "right" = 0.35, "top" = 0.35)
        map <- map + 
           coord_sf(expand = FALSE) + 
           annotation_scale(location = "tr", 
                             pad_y = unit(0.07, "cm"), 
                             pad_x = unit(2.3, "cm"),
                             height = unit(0.1, "cm"))+
    annotation_north_arrow(height = unit(1, "cm"), width = unit(1, "cm"))
    } else if (rastname == "Col"& rasttype == "WIP"){
        lbrt <- c("left" = 0.6, "bottom" = 0, "right" = 0.9, "top" = 0.3)
        map <- map + 
           coord_sf(expand = FALSE) + 
           annotation_scale(location = "tr", 
                             pad_y = unit(1, "cm"), 
                             pad_x = unit(2, "cm"),
                             height = unit(0.1, "cm"))+
    annotation_north_arrow(height = unit(1, "cm"), width = unit(1, "cm"))
    } else if (rastname == "Hoh" & rasttype == "SOC") {
        lbrt <- c("left" = 0.4, "bottom" = 0.15, "right" = 0.75, "top" = 0.5)
        map <- map + 
           coord_sf(expand = FALSE)
    } else if (rastname == "Mas" & rasttype == "SOC") {
        lbrt <- c("left" = -0.15, "bottom" = -0.15, "right" = 0.35, "top" = 0.35)
        map <- map + 
           coord_sf(expand = FALSE)
    } else if (rastname == "Col" & rasttype == "SOC") {
        lbrt <- c("left" = 0.6, "bottom" = 0, "right" = 0.9, "top" = 0.3)
        map <- map + 
           coord_sf(expand = FALSE)
    }
    
     mapformat <- map + 
            coord_sf(expand = FALSE) +
            theme(panel.background = element_blank(),
                  plot.margin = ggplot2::margin(c(0,0,0,0), "cm"),
                  axis.text = element_blank(),
                  axis.ticks = element_blank(),
                  axis.title = element_blank()) 
    
    mapformat_inset <- mapformat + rremove("legend") + sm_vec + 
            inset_element(sm_map, 
                          left = lbrt[["left"]], bottom = lbrt[["bottom"]], 
                          right = lbrt[["right"]], top = lbrt[["top"]], 
                          align_to = "panel")
    
    return(list(mapformat_inset, legend))
}
```


```{r}
hoh_wip_map <- ggmaps(data = wip_list$hoh_wip, 
                      sm_data = submap_list[[4]], 
                      hs = hoh_hs_sm) 
mas_wip_map <- ggmaps(data = wip_list$mas_wip, 
                      sm_data = submap_list[[7]], 
                      hs = mas_hs_sm) 
col_wip_map <- ggmaps(data = wip_list$col_wip, 
                      sm_data = submap_list[[1]], 
                      hs = col_hs_sm) 

hoh_pedons_soc_map <- ggmaps(data = soc_preds_sm$hoh_SOCpredict_pedon_stocks, 
                      submap_list[[4]], 
                      hs = hoh_hs_sm)
mas_pedons_soc_map <- ggmaps(data = soc_preds_sm$mas_SOCpredict_pedon_stocks, 
                      submap_list[[7]], 
                      hs = mas_hs_sm)
col_pedons_soc_map <- ggmaps(data = soc_preds_sm$col_SOCpredict_pedon_stocks, 
                      submap_list[[1]], 
                      hs = col_hs_sm)

hoh_linear_soc_map <- ggmaps(data = soc_preds_sm$hohSOCsum_linear_100, 
                      submap_list[[5]], 
                      hs = hoh_hs_sm)
mas_linear_soc_map <- ggmaps(data = soc_preds_sm$masSOCsum_linear_100, 
                      submap_list[[8]], 
                      hs = mas_hs_sm)
col_linear_soc_map <- ggmaps(data = soc_preds_sm$colSOCsum_linear_100, 
                      submap_list[[2]], 
                      hs = col_hs_sm)

hoh_RF_soc_map <- ggmaps(data = soc_preds_sm$hohSOCsum_RF_100, 
                      submap_list[[6]], 
                      hs = hoh_hs_sm)
mas_RF_soc_map <- ggmaps(data = soc_preds_sm$masSOCsum_RF_100, 
                      submap_list[[9]], 
                      hs = mas_hs_sm)
col_RF_soc_map <- ggmaps(data = soc_preds_sm$colSOCsum_RF_100, 
                      submap_list[[3]], 
                      hs = col_hs_sm)
```


```{r}
hoh_pedons_soc_map
hoh_linear_soc_map
hoh_RF_soc_map
```


### NEED TO DO 

- add hillshades to insets

```{r}
testbig <- ggplot() + 
            geom_spatraster(data = hoh_wip, aes(fill = WIP), maxcell = 2e6) +
            scale_fill_distiller(palette = "YlGnBu",  na.value = NA, direction = 1,
                                 limits = c(0, 1), 
                                 name ='Wetland Intrinsic Potential') 
test <- ggplot() + geom_spatraster(data = hohsubmap[[3]], aes(fill = sum), maxcell = 2e6) +
            scale_fill_viridis_c(option = "inferno",  na.value = NA, 
                                 limits = c(0, 500)) +
    theme_void() +
    theme(legend.position = "none")

testw <- ggplot() + geom_spatraster(data = hohsubmap[[2]], aes(fill = WIP), maxcell = 2e6) +
            scale_fill_viridis_c(option = "viridis",  na.value = NA, 
                                 limits = c(0, 1)) +
    theme_void() +
    theme(legend.position = "none")
    
## This uses patchwork package and is the best solution
testbig + annotation_scale(location = "tr", pad_y = unit(0, "cm"), height = unit(0.1, "cm"),
                           pad_x = unit(1.75, "cm")) + 
    geom_spatvector(data = hohsubmap[[1]], fill = NA, colour = "lightblue", linewidth = 1) +
    inset_element(test, left = 0.5, bottom = 0.1, right = 0.9, top = 0.5, align_to = "panel") 

```


Legends

```{r}
wip_legend <- (hoh_wip_map[[2]])
pedons_soc_legend <- (hoh_pedons_soc_map[[2]])
linear_soc_legend <- (hoh_linear_soc_map[[2]])# + guides(shape = guide_legend(override.aes = list(size = 0.5)))
RF_soc_legend <- (hoh_RF_soc_map[[2]])
both_legend <- rbind(wip_legend, pedons_soc_legend, linear_soc_legend, RF_soc_legend)
```


```{r}
# all_wip_soc_map <- ggpubr::ggarrange(hoh_wip_map[[1]], 
#                   mas_wip_map[[1]], 
#                   col_wip_map[[1]], 
#                   hoh_soc_map[[1]],
#                   mas_soc_map[[1]],
#                   col_soc_map[[1]],
#                   nrow = 2, ncol = 3, labels = "AUTO")
# all_wip_soc_map_leg <- all_wip_soc_map + 
#     theme(plot.margin = ggplot2::margin(0,0,1,0, "cm")) +
#     annotation_custom(wip_legend) + 
#     annotation_custom(soc_legend, ymin = -0.95) +
#     annotation_north_arrow(height = unit(1, "cm"), width = unit(1, "cm"))
# 
# all_wip_soc_map_leg
# 
# ggsave(plot = all_wip_soc_map_leg, filename = "SOIL CARBON/All_WA/writing/Figures/All_WA_WIP_SOC_Maps.png", 
#        width = 9, height = 5, units = "in", bg = "white", dpi = 500)
```





```{r}
all_wip_soc_map <- plot_spacer() + wip_legend + plot_spacer() +
    hoh_wip_map[[1]] + mas_wip_map[[1]] + col_wip_map[[1]] + 
    plot_spacer() + linear_soc_legend + plot_spacer() +
    hoh_linear_soc_map[[1]] + mas_linear_soc_map[[1]] + col_linear_soc_map[[1]] +
    hoh_RF_soc_map[[1]] + mas_RF_soc_map[[1]] + col_RF_soc_map[[1]] +
    hoh_pedons_soc_map[[1]] + mas_pedons_soc_map[[1]] + col_pedons_soc_map[[1]] + 
    plot_layout(ncol = 3,
                nrow = 6, heights = c(0.2, 1, 0.2, 1,1,1))   +
    theme(plot.margin = ggplot2::margin(0,0,0,0, "cm")) 

all_wip_soc_map 
    
ggsave(plot = all_wip_soc_map, filename = "SOIL CARBON/All_WA/writing/Figures/All_WA_WIP_SOC_models_Maps.png", 
       width = 5, height = 6, units = "in", bg = "white", dpi = 200)
```

