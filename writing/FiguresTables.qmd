---
title: "Figure Formatting"
format: html
---

```{r setup, include=FALSE}
library(formatR)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", fig.show = "hold", time_it = TRUE, dpi = 100)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = T, collapse = TRUE)
knitr::opts_knit$set(root.dir = '/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/')
library(rgl)
library(terra)
library(lme4)
library(MASS)
library(lmerTest)
library(MuMIn)
library(terra)
library(sf)
library(ggplot2)
library(ggeffects)
library(ggtext)
library(merTools)
library(glmnet)
library(stats)
library(ggcorrplot)
library(RColorBrewer)
library(webshot)
library(kableExtra)
library(formatR)
library(dplyr)
library(stringr)
library(flextable)
library(ggnewscale)
library(tidyterra)
library(ggpubr)
library(ggspatial)
library(patchwork)
library(randomForest)
library(pdp)
library(kernelshap)
library(shapviz)

knitr::knit_hooks$set(webgl = hook_webgl)
rgl::setupKnitr(autoprint = TRUE)

terraOptions(
    memfrac = 0.1
)

setGDALconfig("GDAL_PAM_ENABLED", "FALSE")

#tmap_options(raster.max.cells = c(plot = 1e7, view = 1e6))
```

Data sources
```{r} 
#| include: false
#| echo: false
#| message: false
#| warning: false
#| cache: true
# knitr::purl("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/WA_SOC_controls/PNW_SOC_Prediction.qmd", output = "/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/WA_SOC_controls/PNW_SOC_Prediction.R")

#source("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/WA_SOC_controls/PNW_SOC_Prediction.R")
source("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/All_WA_Functions.R")
```

### Models

```{r}

lmm_stocks <- readRDS(("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/models/PNW_Model_Dredge_Spline.rds"))
lmm_lab <- readRDS(("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/analysis/models/PNW_Model_Lab_dredge_best.rds"))

QRFM_stocks <- readRDS(("SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_tuned.rds"))
QRFM_lab <- readRDS(("SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_tuned_LabData.rds"))

```

### Dataframes

```{r}
pnw_dat <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_data_MLR3_RFM_LMM.csv")
wa_stocks_dat <- read.csv("SOIL CARBON/All_WA/data/dataframes/All_WA_1m_stocks_preds.csv")

train <- read.csv("SOIL CARBON/All_WA/data/dataframes/Train_data.csv") |> 
  dplyr::select(-site, -X, ) |> dplyr::mutate(across(where(is.character), as.factor))
test <- read.csv("SOIL CARBON/All_WA/data/dataframes/Test_data.csv") |> 
  dplyr::select(-site, -X, ) |> dplyr::mutate(across(where(is.character), as.factor))
test.wet <- read.csv("SOIL CARBON/All_WA/data/dataframes/RFM_Test_Wet_data.csv") |> 
  dplyr::select(-site, -X, ) |> dplyr::mutate(across(where(is.character), as.factor))
test.upl <- read.csv("SOIL CARBON/All_WA/data/dataframes/RFM_Test_Upl_data.csv") |> 
  dplyr::select(-site, -X, ) |> dplyr::mutate(across(where(is.character), as.factor))

pnw_dat_lab <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Lab_data_MLR3_RFM_LMM.csv") |> 
  dplyr::select(-site, -X)
trainlab<- read.csv(
          file = "SOIL CARBON/All_WA/data/dataframes/Train_Lab_data.csv")|> 
  dplyr::select(-site, -X)
testlab<- read.csv(
          file = "SOIL CARBON/All_WA/data/dataframes/Test_Lab_data.csv")|> 
  dplyr::select(-site, -X)
testlab_wet<- read.csv(
          file = "SOIL CARBON/All_WA/data/dataframes/RFM_Test_Lab_Wet_data.csv")|> 
  dplyr::select(-site, -X)
testlab_upl<- read.csv(
          file = "SOIL CARBON/All_WA/data/dataframes/RFM_Test_Lab_Upl_data.csv")|> 
  dplyr::select(-site, -X)

train_dat_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Stocks_Train_Scale.csv")
train_dat_wet_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Stocks_Train_Wet_Scale.csv")
train_dat_upl_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Stocks_Train_Upl_Scale.csv")
test_dat_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Stocks_Test_Scale.csv")
test_dat_wet_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Stocks_Test_Wet_Scale.csv")
test_dat_upl_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Stocks_Test_Upl_Scale.csv")

trainlab_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Lab_Train_Scale.csv")
trainlab_wet_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Lab_Train_Wet_Scale.csv")
trainlab_upl_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Lab_Train_Upl_Scale.csv")
testlab_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Lab_Test_Scale.csv")
testlab_wet_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Lab_Test_Wet_Scale.csv")
testlab_upl_scale <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_Spline_Lab_Test_Upl_Scale.csv")

anova_ci_stocks <- read.csv(paste0("SOIL CARBON/All_WA/data/dataframes/anova_mod_dredge_1_confint95.csv"))
anova_ci_lab <- read.csv(paste0("SOIL CARBON/All_WA/data/dataframes/LMM_Lab_confint95.csv"))


PI_RMSE_stocks <- readRDS(paste0("SOIL CARBON/All_WA/data/dataframes/LMM_PredictInterval_RMSE_Stocks.rds"))
PIw_RMSE_stocks <- readRDS(paste0("SOIL CARBON/All_WA/data/dataframes/LMM_Wet_PredictInterval_RMSE_Stocks.rds"))
PIu_RMSE_stocks <- readRDS(paste0("SOIL CARBON/All_WA/data/dataframes/LMM_PredictInterval_Upl_RMSE_Stocks.rds"))

PI_RMSE_lab <- readRDS(paste0("SOIL CARBON/All_WA/data/dataframes/LMM_PredictInterval_RMSE_Lab.rds"))
PIw_RMSE_lab <- readRDS(paste0("SOIL CARBON/All_WA/data/dataframes/LMM_Wet_PredictInterval_RMSE_Lab.rds"))
PIu_RMSE_lab <- readRDS(paste0("SOIL CARBON/All_WA/data/dataframes/LMM_PredictInterval_Upl_RMSE_Lab.rds"))

mod_errdf <- read.csv("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/data/dataframes/PNW_Stocks_model_fit.csv")
mod_errdf_lab <- read.csv("/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/data/dataframes/PNW_Lab_model_fit.csv")
qrf_errdf <- read.csv("SOIL CARBON/All_WA/data/dataframes/MLR3_RFM_ErrorDF.csv")
qrf_errdf_lab <- read.csv("SOIL CARBON/All_WA/data/dataframes/MLR3_RFM_ErrorDF_LabData.csv")


ks <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap.rds")
ks_wet <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Wet.rds")
ks_upl <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Upl.rds")

ia_1 <- readRDS(
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Interact_1_plot.rds")
ia_1$data <- ia_1$data |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_2 <- readRDS(
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_2_plot.rds")
ia_2$results <- ia_2$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_3 <- readRDS( 
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_3_plot.rds")
ia_3$results <- ia_3$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_4 <- readRDS(
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_4_plot.rds")
ia_4$results <- ia_4$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_5 <- readRDS( 
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_5_plot.rds") 
ia_5$results <- ia_5$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)

ks_lab <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_LabData.rds")
ks_lab_wet <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Wet_LabData.rds")
ks_lab_upl <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Upl_LabData.rds")

ia_lab_1 <- readRDS(
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Interact_Lab_1_plot.rds")
ia_lab_1$data <- ia_lab_1$data |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_lab_2 <- readRDS(
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_Lab_2_plot.rds")
ia_lab_2$results <- ia_lab_2$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_lab_3 <- readRDS( 
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_Lab_3_plot.rds")
ia_lab_3$results <- ia_lab_3$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_lab_4 <- readRDS(
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_Lab_4_plot.rds")
ia_lab_4$results <- ia_lab_4$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)
ia_lab_5 <- readRDS( 
        file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Ranger_Interact_Lab_5_plot.rds")
ia_lab_5$results <- ia_lab_5$results |> dplyr::arrange(desc(.interaction)) |> slice(1:5)

```


Map tables 
```{r}
PNW_SOC_df <- read.csv("SOIL CARBON/All_WA/data/dataframes/PNW_MapSOC_wetupl_1m_Mgha.csv")

nwca_soc_est <- read.csv("SOIL CARBON/All_WA/data/dataframes/NWCA_SOC_C_map_simp.csv") |> 
  mutate(StudyArea = str_extract(Name, "Hoh|Mas|Col"),
         Name = str_remove_all(Name, "Hoh |Mas |Col ")) |> 
  dplyr::select(StudyArea, everything()) |>
  mutate(StudyArea = case_when(str_detect(StudyArea, "(?i)HOH") ~ "HRW",
                            str_detect(StudyArea, "(?i)MAS") ~ "MRW",
                            str_detect(StudyArea, "(?i)COL") ~ "CVW",
                            str_detect(StudyArea, "(?i)HLEF") ~ "HLEF",
                            .default = NA))

mcnicol_soc_frac_form <- read.csv("SOIL CARBON/All_WA/data/dataframes/McNicol_2019_SOC_Frac_Estimates_HLEF.csv")

gsoc_frac_pnw <- read.csv("SOIL CARBON/All_WA/data/dataframes/GSOC_Frac_Estimates_PNW.csv")
```


### Tables 

Functions for changing tables
```{r}
std_border <- officer::fp_border(color = "gray10", width = 0.1)
thick_border <- officer::fp_border(color = "black", width = 1.5)
flextable_fun <- function(table){
    table |> flextable() |>
    #colformat_num(j = 7, options(digits=4) ) |>
    flextable::font(fontname = "Aptos", part = "all") |> 
    fontsize(size = 8, part = "body") |>
    fontsize(size = 9, part = "header") |>
    set_table_properties(layout = "autofit", align = "center", width = 1) |>
    flextable::align(align = "center", part = "all") |>
    flextable::align(align = "left", j = 1) |>
    flextable::bg(bg = "gray90", part = "header") |> 
    border_inner_v(part = "header", border = std_border) |> 
    hline(part = "footer", border = thick_border) |> 
    hline(part = "header", border = thick_border) |>
    padding(padding.top = 2, padding.bottom = 2, part = "body") |>
    padding(padding = 5, part = "header") |>
    paginate(init = TRUE, hdr_ftr = TRUE) 
}

mutate_tab <- function(table){
    table |> mutate(Predictor = replace(Predictor, 
                               Predictor == "sd_(Intercept)|sample_ID", 
                               "St.Dev. Random Intercept"),
           Predictor = replace(Predictor, 
                               Predictor == "sd_lower_depth|sample_ID", 
                               "St.Dev. Random Slope and Intercept"),
           Predictor = replace(Predictor, 
                               Predictor == "cor_lower_depth.(Intercept)|sample_ID", 
                               "Random Slope and Intercept Correlation"),
           Predictor = replace(Predictor, 
                               Predictor == "sigma", 
                               "Model Residuals"),
           Predictor = replace(Predictor, 
                               Predictor == "(Intercept)", 
                               "Model Intercept"),
           Predictor = replace(Predictor, 
                               Predictor == "CHM", 
                               "Canopy Height"),
           Predictor = replace(Predictor, 
                               Predictor == "WIP", 
                               "Wetland Intrinsic Potential"),
           Predictor = replace(Predictor, 
                               Predictor == "HLI", 
                               "Heat Load Index"),
           Predictor = replace(Predictor, 
                               Predictor == "MAP", 
                               "Mean Annual Precipitation"),
           Predictor = replace(Predictor, 
                               Predictor == "lower_depth", 
                               "Depth"),
           Predictor = str_replace(Predictor, 
                                "GEO", 
                               "Geologic Age: "))
}



```


```{r}
overall_depth_stocks <- pnw_dat |> group_by(lower_depth) |> 
    summarise(site = "All", 
              mean = mean(SOC_stock_spline),
               sd = sd(SOC_stock_spline),
               n = n()) |>
  mutate(se = sd/sqrt(n),
         dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2))))

mean_stdev_stocks_table <- pnw_dat |> group_by(site, lower_depth) |> 
  summarise(mean = mean(SOC_stock_spline),
            sd = sd(SOC_stock_spline),
            n = n()) |>
  mutate(se = sd/sqrt(n),
         dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2)))) |> 
    bind_rows(overall_depth_stocks) |>
     filter(lower_depth <151) |>
    mutate(site = case_when(str_detect(site, "(?i)HOH") ~ "HRW",
                            str_detect(site, "(?i)MAS") ~ "MRW",
                            str_detect(site, "(?i)COL") ~ "CVW",
                            str_detect(site, "(?i)HLEF") ~ "HLEF",
                            .default = "All")) |> 
    mutate(site = factor(site)) |> 
    mutate(site = fct_relevel(site, c("All", "HLEF", "HRW", "MRW", "CVW"))) |>
    arrange(site) |> 
    rename("Study Area" = site,
           "Depth" = lower_depth) |>
    relocate(`Study Area`, Depth, mean, sd, se, n) |> 
    flextable_fun() |>
    merge_v(j = ~ `Study Area`) |> 
    mk_par(
    part = "header", j = 1,
    value = as_paragraph("Study\nArea")
    ) |>
    mk_par(
    part = "header", j = 3,
    value = as_paragraph("Mean SOC Stock\n(g cm", as_sup("-2"), ")")
    ) |> 
    mk_par(
    part = "header", j = 4,
    value = as_paragraph("Std. Deviation SOC Stock\n(g cm", as_sup("-2"), ")")
    ) |> 
    mk_par(
    part = "header", j = 5,
    value = as_paragraph("Std. Error SOC Stock\n(g cm", as_sup("-2"), ")")
    ) |> 
    hline(part = "body", border = fp_border_default(width =0)) |> 
    add_body_row(top = FALSE, values = "", colwidths = c( 6)) |>
    hline(part = "body", i = 6) |>
    hline(part = "body", i = 12) |>
    hline(part = "body", i = 18) |>
    hline(part = "body", i = 24) |>
    hline(part = "body", i = 30, border = thick_border) |>
    fontsize(size = 10, part = "body", j = 1)
mean_stdev_stocks_table
saveRDS(mean_stdev_stocks_table, file = "SOIL CARBON/All_WA/writing/Tables/mean_stdev_stocks_table.rds")
```

1m Stocks from samples
```{r}
#| eval: false
full_1m_stocks <- wa_stocks_dat |> 
     mutate(wetupl = "Full") |>
   summarise(site = "Overall",
       wetupl = first(wetupl),
                                mean = mean(SOC_stock_100),
                                sd = sd(SOC_stock_100),
                                n = n()) |>
  mutate(se = sd/sqrt(n),
         dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2)))) 
all_1m_stocks <- wa_stocks_dat |> 
    mutate(wetupl = case_when(WIP >= 0.5 ~ "Wetland",
                              WIP < 0.5 ~  "Upland")) |>
    group_by(wetupl) |> 
    summarise(site = "All",
        wetupl = first(wetupl),
                                mean = mean(SOC_stock_100),
                                sd = sd(SOC_stock_100),
                                n = n()) |>
  mutate(se = sd/sqrt(n),
         dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2)))) |> 
    rbind(full_1m_stocks)


full_sites_1m_stocks <- wa_stocks_dat |> 
     mutate(wetupl = "Full") |>
    group_by(site) |> summarise(wetupl = first(wetupl),
                                mean = mean(SOC_stock_100),
                                sd = sd(SOC_stock_100),
                                n = n()) |>
  mutate(se = sd/sqrt(n),
         dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2)))) 


wa_stocks_dat_table <- wa_stocks_dat |> 
    mutate(wetupl = case_when(WIP >= 0.5 ~ "Wetland",
                              .default = "Upland")) |> 
    group_by(site, wetupl) |> summarise(mean = mean(SOC_stock_100),
                                        sd = sd(SOC_stock_100),
                                        n = n()) |>
  mutate(se = sd/sqrt(n),
         dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2)))) |> 
    rbind(all_1m_stocks) |> 
    rbind(full_sites_1m_stocks) |> 
    mutate(site = case_when(str_detect(site, "HOH") ~ "HRW",
                            str_detect(site, "MAS") ~ "MRW",
                            str_detect(site, "COL") ~ "CVW",
                            .default = "All")) |> 
    mutate(site = factor(site)) |> 
    mutate(site = fct_relevel(site, c("All", "HRW", "MRW", "CVW"))) |>
    arrange(site, wetupl) |> 
    relocate(site, wetupl, mean, sd, se, n) |> 
    rename("Site" = site,
           "Landscape Class" = wetupl) |>
    flextable_fun() |>
    merge_v(j = ~ Site) |> 
    mk_par(
    part = "header", j = 3,
    value = as_paragraph("Mean 1m SOC Stock\n(g cm", as_sup("-2"), ")")
    ) |> 
    mk_par(
    part = "header", j = 4,
    value = as_paragraph("Std. Deviation 1m SOC Stock\n(g cm", as_sup("-2"), ")")
    ) |> 
    mk_par(
    part = "header", j = 5,
    value = as_paragraph("Std. Error 1m SOC Stock\n(g cm", as_sup("-2"), ")")
    ) |> 
    hline(part = "body", border = fp_border_default(width =0)) |> 
    add_body_row(top = FALSE, values = "", colwidths = c( 6)) |>
    hline(part = "body", i = 12, border = thick_border) |> 
    hline(part = "body", i = 3) |>
    hline(part = "body", i = 6) |>
    hline(part = "body", i = 9) |>
    fontsize(size = 10, part = "body", j = 1)
wa_stocks_dat_table
saveRDS(wa_stocks_dat_table, file = "SOIL CARBON/All_WA/writing/Tables/Stocks_wetup_table.rds")
```


Map table stats

```{r}
PNW_Mapped_SOC <- PNW_SOC_df |> 
  bind_rows(gsoc_frac_pnw) |> 
  bind_rows(mcnicol_soc_frac_form) |> 
  mutate(StudyArea = case_when(str_detect(StudyArea, "(?i)HOH") ~ "HRW",
                            str_detect(StudyArea, "(?i)MAS") ~ "MRW",
                            str_detect(StudyArea, "(?i)COL") ~ "CVW",
                            str_detect(StudyArea, "(?i)HLEF") ~ "HLEF",
                            .default = NA)) |> 
  bind_rows(y = nwca_soc_est) |> 
  mutate(Source = case_when(str_detect(Name, "(?i)gsoc") ~ "GSOC",
                            str_detect(Name, "(?i)mcnicol") ~ "McNicol et al., 2019",
                            str_detect(Name, "(?i)nwca") ~ "Uhran et al., 2021",
                            .default = "This Study")) |> 
  mutate(Name = case_when(#str_detect(Name, "(?i)list") ~ "Total",
                            str_detect(Name, "(?i)nwca") ~ "Wetland",
                            str_detect(Name, "(?i)_wet") ~ "Wetland",
                            str_detect(Name, "(?i)_upl") ~ "Upland",
                            .default = "Total")) |> 
  dplyr::arrange(match(Name, c("Total", "Wetland", "Upland")),
                 match(StudyArea, c("HLEF", "HRW", "MRW", "CVW"))) |> 
  dplyr::select( Name, StudyArea, Source, everything()) |>
  dplyr::select(-Perc10thSOC_Mgha, -Perc90thSOC_Mgha) |>
  dplyr::mutate(across(where(is.numeric), ~ case_when(
    . > 100  ~ round(., 0),  # Round to the nearest hundred
    #. > 100 & . <= 1000 ~ round(., 0),  # Round to the nearest ten
    . > 10 & . <= 100 ~ round(., 1),
    . > 0 & . <= 10  ~ round(., 2),  # Round to the nearest whole number
    TRUE ~ .  # Default case (if needed)
  ))) |> 
  flextable_fun() |>
  compose(part = "header", i=1, j = 1,
               value = c(as_paragraph("Landscape \nClass")  )) |>
  compose(part = "header", i=1, j = 2,
               value = c(as_paragraph("Study\nArea")  )) |>
  compose(part = "header", i=1, j = 4,
               value = c(as_paragraph("Total \nArea (ha)")  )) |>
  compose(part = "header", i=1, j = 5,
               value = c(as_paragraph("Mean 1m \nSOC Stock\n", 
                                      ("Mg ha"), as_sup("-1")))) |>
  compose(part = "header", i=1, j = 6,
               value = c(as_paragraph("Total 1m\nSOC (Tg)")  )) |>
  merge_v(j = c(1,2)) |>
  hline(part = "body", i = 9) |>
  hline(part = "body", i = 21) |>
  #hline(part = "body", i = 27) |> 
  hline(part = "body", i = 3, j = 2:6) |> 
  hline(part = "body", i = 5, j = 2:6) |> 
  hline(part = "body", i = 7, j = 2:6) |> 
  hline(part = "body", i = 12, j = 2:6) |> 
  hline(part = "body", i = 15, j = 2:6) |> 
  hline(part = "body", i = 18, j = 2:6) |> 
  hline(part = "body", i = 21, j = 2:6) |> 
  hline(part = "body", i = 24, j = 2:6) |> 
  hline(part = "body", i = 26, j = 2:6) |> 
  hline(part = "body", i = 28, j = 2:6) |> 
  fix_border_issues()


PNW_Mapped_SOC

saveRDS(PNW_Mapped_SOC, "SOIL CARBON/All_WA/writing/Tables/PNW_Mapped_SOC.rds")
```


### Model Performance Table

Test dataset metrics only

```{r}


stock_mods_table <- mod_errdf |> 
    dplyr::select(LandscapeClass, LMM.LogMargR2, LMM.LogCondR2,
                  LMM.nLogPredObsR2, LMM.nlogPredObsRMSE) |> 
    left_join(y = qrf_errdf |> 
                  dplyr::select(LandscapeClass, RFM.R2_OOB, RFM.RMSE_OOB,
                                RFM.R2_test, RFM.RMSE_test), 
              by = join_by(LandscapeClass)) |> 
    dplyr::mutate(`Model Prediction` = "SOC Stock") |> 
    dplyr::select(`Model Prediction`, everything()) |> 
    dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2)))

Cperc_mods_table <- mod_errdf_lab |> 
    dplyr::select(LandscapeClass, LMM.LogMargR2, LMM.LogCondR2,
                  LMM.nLogPredObsR2, LMM.nlogPredObsRMSE) |>
    left_join(y = qrf_errdf_lab|> 
                  dplyr::select(LandscapeClass, RFM.R2_OOB, RFM.RMSE_OOB,
                                RFM.R2_test, RFM.RMSE_test), 
              by = join_by(LandscapeClass)) |>
    dplyr::mutate(`Model Prediction` = "SOC Perc") |> 
    dplyr::select(`Model Prediction`, everything()) |> 
    dplyr::mutate(across(where(is.numeric), ~base::round(.x, 2)))
    
    

stat_table_format <- stock_mods_table |> 
    rbind(Cperc_mods_table)  |>
    flextable_fun() |> 
    merge_v(j = 1) |> 
    separate_header(split = "[\\.]", fixed = F) |>
    compose(part = "body", i=c(2:3,5:6), j = c(3:4, 7:8),
               value = c(as_paragraph("---")  )) |>
    align(align = "center", part =  "header") |>
    vline(part = "header",  j = 6)|>
    compose(part = "header", i=1, j = 2,
               value = c(as_paragraph("Landscape \nClass")  )) |>
    compose(part = "header", i = 2, j = 3,
               value = c(as_paragraph("Marginal R", as_sup("2"),
                                      "\n"))) |>
    compose(part = "header", i = 2, j = 4,
               value = c(as_paragraph("Conditional R", as_sup("2"),
                                      "\n"))) |>
    compose(part = "header", i = 2, j = 5,
               value = c(as_paragraph("Test R", as_sup("2")))) |>
    compose(part = "header", i = 2, j = 6,
               value = c(as_paragraph("Test RMSE", (" \ng cm"), as_sup("-2")))) |>
    compose(part = "header", i = 2, j = 7,
               value = c(as_paragraph("OOB R", as_sup("2"),
                                      "\n"))) |>
    compose(part = "header", i = 2, j = 8,
               value = c(as_paragraph("OOB RMSE", (" \ng cm"), as_sup("-2")))) |>
    compose(part = "header", i = 2, j = 9,
           value = c(as_paragraph("Test R", as_sup("2")))) |>
    compose(part = "header", i = 2, j = 10,
               value = c(as_paragraph("Test RMSE", (" \ng cm"), as_sup("-2")))) |>
    compose(part = "body", i = 4, j = 1,
               value = c(as_paragraph("SOC \n%"))) |>
  compose(part = "body", i = 1, j = 1,
               value = c(as_paragraph("SOC stock", "\ng cm", as_sup("-2")))) |>
    fix_border_issues() 
    # vline(part = "header",  j = 9) |> 
    # delete_rows(i = c(2, 3), part = "body") |> 
    # delete_columns(j = 1) |> 
    # flextable::merge_h_range(i = 1, j1 = 1, j2 = 5, part = "header") |> 
    # flextable::merge_h_range(i = 1, j1 = 6, j2 = 8, part = "header") |> 
    # flextable::merge_h_range(i = 1, j1 = 9, j2 = 11, part = "header") |> 

stat_table_format

saveRDS(stat_table_format, file = "SOIL CARBON/All_WA/writing/Tables/Model_stats_table.rds")
readRDS(file = "SOIL CARBON/All_WA/writing/Tables/Model_stats_table.rds")
```


### Graphs

```{r graph params}

theme_param <- theme(
    text = element_text(size = 8),
    legend.position = 'right', 
    legend.key.size = unit(0.6, "cm"),
    legend.spacing.x = unit(1.2, "cm"),
    legend.text = element_text(size = rel(0.70), hjust = 0.5),
    panel.background = element_blank(),
    panel.grid.major = element_line(colour = "grey80", linewidth = 0.2),
    axis.ticks = element_blank(),
    axis.text = element_text(size = rel(0.8)),
    axis.title = element_text(size = rel(1))
    )

```


#### Model fits vs. Predictors



#### Prediction vs. Actual Plots

```{r}
library(RColorBrewer)
predict_plot <- function(model, data) {
    
    mod_string <- tolower(deparse(substitute(model)))
    if(str_detect(mod_string, pattern = "lmm")) {
        fit_vals <- 10**predict(model, data, allow.new.levels = TRUE)
        dep_var <- all.vars(formula(model))[1]
        WIP_vals <- data$WIP*sd(train$WIP) + mean(train$WIP)
    } else if(str_detect(mod_string, pattern = "rf")){
         fit_vals <- predict(model, data)
         dep_var <- model$model$dependent.variable.name
         WIP_vals <- data$WIP
    }
    
    
    if(str_detect(dep_var, pattern = "carbon_perc")){
        xlabel <- "Observed SOC (%)"
        ylabel <- "Predicted SOC (%)"
        axis_max <- ceiling(max(fit_vals, data[,1])*1.1)
    } else if(str_detect(dep_var, pattern = "SOC_stock_spline")){
        xlabel <- expression(Observed~SOC~g~cm^{"-2"})
        ylabel <- expression(Predicted~SOC~g~cm^{"-2"})
        axis_max <- ceiling(max(fit_vals, data[,1])*1.1)
    }
    
    #Graphing 
    
    
    predict_graph <- ggplot(data = data) + 
        geom_point(aes(y = fit_vals,
                       x = .data[[dep_var]],
                       fill = WIP_vals), 
                   shape = 21, size = 3.5) +
        geom_abline(intercept = 0, slope = 1) +
        scale_fill_gradientn(colours = RColorBrewer::brewer.pal(n = 9, name = "YlGnBu"),
                             values = c(-0.1,1.1), breaks = c(0.01, 0.5, 0.99),
                             labels = c("0%", "50%", "100%"),
                             name = "Wetland \nIntrinsic \nPotential",
                             ) +
        # annotate(geom = "text", x = axis_max/2, y = axis_max,
        #          label = as.expression(bquote(R^2 == .(R2)))) +
        ylab(ylabel) + 
        xlab(xlabel) + 
        xlim(0, axis_max) + 
        ylim(0, axis_max) +
        theme_param

    return(predict_graph)
    
}

lmm_lab_r2 <- format(round(r.sq(y = testlab$carbon_perc, 
                   y.fitted = 10**predict(lmm_lab, testlab_scale, 
                                          allow.new.levels = TRUE)), 2), nsmall = 2)
qrf_lab_r2 <- format(round(r.sq(y = testlab$carbon_perc, 
                  y.fitted = predict(QRFM_lab, testlab)), 2) , nsmall = 2)
lmm_stocks_r2 <- format(round(r.sq(y = test_dat_scale$SOC_stock_spline, 
                      y.fitted = 10**predict(lmm_stocks, test_dat_scale,
                                             allow.new.levels = TRUE)), 2), nsmall = 2)
qrf_stocks_r2 <- format(round(r.sq(y = test$SOC_stock_spline, 
                      y.fitted = predict(QRFM_stocks, test)), 2), nsmall = 2)

```


```{r}
#| fig-width: 6.5
#| fig-height: 5
lmm_lab_plot <- predict_plot(model = lmm_lab, 
                             data = testlab_scale) +
    annotate(geom = "text", x = 6, y = 9,
             label = as.expression(bquote(R^2 == .(lmm_lab_r2)))) +
    theme(legend.position = "none") 

lmm_stocks_plot <- predict_plot(model = lmm_stocks, data = test_dat_scale) +
    annotate(geom = "text", x = 0.9, y = 1.75,
             label = as.expression(bquote(R^2 == .(lmm_stocks_r2)))) 

qrf_stocks_plot <- predict_plot(model = QRFM_stocks, data = test) +
    annotate(geom = "text", x = 0.9, y = 1.75,
             label = as.expression(bquote(R^2 == .(qrf_stocks_r2)))) 

qrf_lab_plot <- predict_plot(model = QRFM_lab, data = testlab) + 
    theme(legend.position = "none") +
    annotate(geom = "text", x = 6, y = 9,
             label = as.expression(bquote(R^2 == .(qrf_lab_r2)))) 

# wip_legend <- ggpubr::get_legend(qrf_lab_plot + theme(legend.box = "horizontal",
#                                                       legend.key.width = rel(0.7)), position = "top") 
# as_ggplot(wip_legend) 


model_fit_plots <- lmm_stocks_plot + qrf_stocks_plot + lmm_lab_plot + qrf_lab_plot +
    patchwork::plot_layout(nrow = 2, ncol = 2, axis_titles = "collect",
                           widths = 1, byrow = T, guides = "collect"
                          ) +
    plot_annotation(tag_levels = list(c("A ", "B", "C", "D")), tag_suffix = ".")
model_fit_plots
saveRDS(model_fit_plots, file = "SOIL CARBON/All_WA/writing/Figures/Model_Test_Fit_Scatter.rds")
```




### Coefficent plots 

```{r}
coef_fig_func <- function(anova_ci, model) {
  if(str_detect(deparse(substitute(model)), "stocks")){
            anova_df <-  anova_ci |> mutate(Predictor = case_when(
              str_detect(Predictor, "Intercept") ~ str_replace(Predictor,
                                                               "\\(Intercept\\)",
                                                 "Geolithology glacial outwash"),
                                                .default = (Predictor)
                    )
              )
  } else{
     anova_df <-  anova_ci |> mutate(Predictor = case_when(
              str_detect(Predictor, "Intercept") ~ str_replace(Predictor,
                                                               "\\(Intercept\\)",
                                                 "Intercept"),
                                                .default = (Predictor)
                    )
              )
  }
  coef_fig <- anova_df |> 
    dplyr::filter(Predictor != "Model" & Predictor != "LITH" & Predictor != "NULL",
                  Predictor != "Intercept") |> 
    mutate(Predictor = case_when(str_detect(Predictor, "lower_depth") ~ 
                                     str_replace(Predictor,"lower_depth", 
                                                 "Depth"),
                                 str_detect(Predictor, "LITH") ~ 
                                     str_replace(Predictor, "LITH", 
                                                 "Geolithology "),
                                 str_detect(Predictor, "PET_MAP") ~ 
                                     str_replace(Predictor, "PET_MAP", 
                                                 "PET:MAP "),
                                 str_detect(Predictor, "CHM") ~ 
                                     str_replace(Predictor, "CHM", 
                                                 "Canopy Height"),
                                 str_detect(Predictor, "grad_1000") ~ 
                                     str_replace(Predictor, "grad_1000", 
                                                 "Gradient 1000m"),
                                 str_detect(Predictor, "grad_300") ~ 
                                     str_replace(Predictor, "grad_300", 
                                                 "Gradient 300m"),
                                 str_detect(Predictor, "grad_50") ~ 
                                     str_replace(Predictor, "grad_50", 
                                                 "Gradient 50m"),
                                 str_detect(Predictor, "dev_1000") ~ 
                                     str_replace(Predictor, "dev_1000", 
                                                 "Deviation 1000m"),
                                 str_detect(Predictor, "dev_300") ~ 
                                     str_replace(Predictor, "dev_300", 
                                                 "Deviation 300m"),
                                                .default = (Predictor))) |> 
    dplyr::mutate(Predictor = case_when(str_detect(Predictor, 
                                                   "Geolithology glacial till") ~ 
                                     str_replace(Predictor, 
                                                 "Geolithology glacial till and drift",
                                                 "Geolithology Glacial TD"),
                                     str_detect(Predictor, 
                                                   "Geolithology glacial outwash") ~ 
                                     str_replace(Predictor, 
                                                 "Geolithology glacial outwash",
                                                 "Geolithology Glacial OW"),
                                     str_detect(Predictor, "Geolithology") ~ 
                                     tools::toTitleCase(as.character(Predictor)),
                                     .default = (Predictor)),
                  Predictor = as.factor(Predictor)) |> 
    ggplot(aes(y = fct_reorder(Predictor, -desc(abs(Coefficient))), x = Coefficient)) +
    geom_point(size = 0.7) +
    geom_errorbar(aes(xmin = conf2.5, xmax = conf.975), linewidth = 0.3) + 
    geom_vline(xintercept = 0, lty = 3, colour = "red") +
    scale_x_continuous(name = "Scaled\nCoefficient\nEstimate", n.breaks = 5, 
                       limits = c(-1,1)) +
    scale_y_discrete(labels = scales::label_wrap(15)) +
      theme_param
    #aes(y = stringr::str_wrap(Predictor, 15), x = Estimate) 
    #coord_flip() #+
    
}

ks <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap.rds")
ks_wet <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Wet.rds")
ks_upl <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Upl.rds")

ks_lab <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_LabData.rds")
ks_lab_wet <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Wet_LabData.rds")
ks_lab_upl <- readRDS(file = "SOIL CARBON/All_WA/analysis/models/MLR3_RFM_Ranger_KernelShap_Upl_LabData.rds")
```


```{r}
#| fig-width: 6.5
#| fig-height: 6
coef_fig_lmm_stocks <- coef_fig_func(anova_ci_stocks, lmm_stocks) 
coef_fig_lmm_lab <- coef_fig_func(anova_ci_lab, lmm_lab)

qrf_stocks_shap <- sv_importance(shapviz(ks), kind = "both", 
                                 max_display = 8, alpha = 0.1, fill = "black") + 
    scale_colour_viridis_c(
      name = "Scaled\nFeature\nValue", option = "D",
      breaks = c(0, 1), labels = c("Low: 0", "High: 1")
    ) +
    scale_y_discrete(labels = \(x) 
    str_replace_all(x, c(lower_depth = "Depth",
                         PET_MAP = "PET:MAP",
                         CHM = "Canopy Height",
                         LITH = "Geolithology",
                         DTM = "Elevation",
                         grad_1000 = "Gradient 1000m",
                         grad_300 = "Gradient 300m",
                         grad_50 = "Gradient 50m",
                         dev_1000 = "Deviation 1000m",
                         dev_300 = "Deviation 300m",
                         dev_50 = "Deviation 50m"))
    ) +
    theme_param 
qrf_lab_shap <- sv_importance(shapviz(ks_lab), kind = "both", 
                              max_display = 8, alpha = 0.1, fill = "black") +
  scale_colour_viridis_c(
      name = "Scaled\nFeature\nValue", option = "D",
      breaks = c(0, 1), labels = c("Low: 0", "High: 1")
    ) +
    scale_y_discrete(labels = \(x) 
        str_replace_all(x, c(lower_depth = "Depth",
                             PET_MAP = "PET:MAP",
                             CHM = "Canopy Height",
                             LITH = "Geolithology",
                             DTM = "Elevation",
                             grad_1000 = "Gradient 1000m",
                             grad_300 = "Gradient 300m",
                             grad_50 = "Gradient 50m",
                             dev_1000 = "Deviation 1000m",
                             dev_300 = "Deviation 300m",
                             dev_50 = "Deviation 50m"))
        ) + theme_param



coef_plots <- (coef_fig_lmm_stocks + ggtitle("LMM") +
                 ylab(expression(SOC~Stock~g~cm^{2}))) +
  (qrf_stocks_shap) + ggtitle("RFM") +
  (coef_fig_lmm_lab+ 
                         ylab(expression(SOC~"%"))) +
  qrf_lab_shap + 
    plot_layout(nrow = 2, ncol = 2, axis_titles = "collect", guides = "collect")  +
    plot_annotation(tag_levels = list(c("A.", "B.","C.", "D."))) & 
    theme(plot.tag = element_text(size = 8),
          plot.tag.position = c(0.1, 0.95),
          plot.title = element_text(hjust = 0.5),
          legend.key.width = unit(0.3, "cm")) 


coef_plots
saveRDS(coef_plots, file = "/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/writing/Figures/LMM_RFM_coef_plots_graphs.rds")

```


### Random Forest plots 

```{r}


# save(rfm_pdp_plots, file = "/Users/Anthony/OneDrive - UW/University of Washington/Data and Modeling/SOIL CARBON/All_WA/writing/Figures/RFM_PDP_plots.RData")

```

#### Multivariate PDP plots

```{r}
# wip_depth_mvpdp <- pdp::partial(RFM, pred.var = c("WIP", "MAP"), 
#                          grid.resolution = 18, train = rf.train) |> 
#   dplyr::rename(Pred_SOC = yhat)
# 
# map_depth_mvpdp <- pdp::partial(RFM, pred.var = c("MAP", "lower_depth"), 
#                           grid.resolution = 5, train = rf.train) |> 
#   dplyr::rename(Pred_SOC = yhat)
# 
# grad_depth_mvpdp <- pdp::partial(RFM, pred.var = c("grad_300", "lower_depth"), 
#                            grid.resolution = 5, train = rf.train) |> 
#   dplyr::rename(Pred_SOC = yhat)



# mvpdp <- cbind(wip_depth_mvpdp, map_depth_mvpdp, grad_depth_mvpdp)
# 
# wip_mvpdp_gg <- ggplot(wip_depth_mvpdp, aes(x = WIP, y = MAP, fill = Pred_SOC)) +
#   geom_tile() + 
#   scale_fill_viridis_c(option = "A", values = c(0,2))
# map_mvpdp_gg <- ggplot(map_depth_mvpdp, aes(x = MAP, y = lower_depth, fill = Pred_SOC)) +
#   geom_tile() + 
#   scale_fill_viridis_c(option = "A", values = c(0,2))
# grad_mvpdp_gg <- ggplot(grad_depth_mvpdp) +
#   geom_tile(aes(x = grad_300, y = WIP, fill = Pred_SOC))
#   
```

#### Variable importance 


```{r}
ks_format_func <- function (a_ks){
  ks_vars_form <- a_ks$S |> as.data.frame() |> 
    dplyr::summarise(across(everything(), ~ sum(abs(.x)))) |>
    pivot_longer(everything(), names_to = "column", values_to = "abs_sum") |>
    arrange(desc(abs_sum)) |>
    slice_head(n = 5)
  return(ks_vars_form)
}
ks_vars <- ks_format_func(ks)
ks_wet_vars <- ks_format_func(ks_wet)
ks_upl_vars <- ks_format_func(ks_upl)

ks_lab_vars <- ks_format_func(ks_lab)
ks_lab_wet_vars <- ks_format_func(ks_lab_wet)
ks_lab_upl_vars <- ks_format_func(ks_lab_upl)

shap_fullmod_plots <- sv_dependence(shapviz(ks), 
                                    v = c(ks_vars$column[1],
                                     ks_vars$column[2], 
                                     ks_vars$column[3], 
                                     ks_vars$column[4]), 
                  color_var = ks_vars$column[5])

shap_fullmod_lab_plots <- sv_dependence(shapviz(ks_lab), 
                                    v = c(ks_lab_vars$column[1],
                                     ks_lab_vars$column[2], 
                                     ks_lab_vars$column[3], 
                                     ks_lab_vars$column[4]), 
                  color_var = ks_lab_vars$column[5])
```


```{r}
shap_lab_func <- function(shap_plots){
  for(i in 1:length(shap_plots)){
  shap_plots[[i]]$labels$x = str_replace_all(shap_plots[[i]]$labels$x, 
                   c(lower_depth = "Depth",
                     PET_MAP = "PET:MAP",
                     CHM = "Canopy Height",
                     LITH = "Geolithology",
                     DTM = "Elevation",
                     grad_1000 = "Gradient 1000m",
                     grad_300 = "Gradient 300m",
                     grad_50 = "Gradient 50m",
                     dev_1000 = "Deviation 1000m",
                     dev_300 = "Deviation 300m",
                     dev_50 = "Deviation 50m"))
    shap_plots[[i]]$labels$colour = str_replace_all(shap_plots[[i]]$labels$colour, 
                   c(lower_depth = "Depth",
                     PET_MAP = "PET:MAP",
                     CHM = "Canopy Height",
                     LITH = "Geolithology",
                     DTM = "Elevation",
                     grad_1000 = "Gradient 1000m",
                     grad_300 = "Gradient 300m",
                     grad_50 = "Gradient 50m",
                     dev_1000 = "Deviation 1000m",
                     dev_300 = "Deviation 300m",
                     dev_50 = "Deviation 50m"))
   shap_plots[[i]]$labels$title = ""
  }
  return(shap_plots)
}
```


```{r}
shap_1_2_plot <- sv_dependence(shapviz(ks), 
                                    v = c(ks_vars$column[1]), 
                  color_var = ks_vars$column[2])
shap_2_3_plot <- sv_dependence(shapviz(ks), 
                                    v = c(ks_vars$column[2]), 
                  color_var = ks_vars$column[3])
shap_lab_1_2_plot <- sv_dependence(shapviz(ks_lab), 
                                    v = c(ks_lab_vars$column[1]), 
                  color_var = ks_lab_vars$column[2])
shap_lab_2_3_plot <- sv_dependence(shapviz(ks_lab), 
                                    v = c(ks_lab_vars$column[2]), 
                  color_var = ks_lab_vars$column[3])

shap_pdp_plot_func <- function(shap_interact,name, colour_pal, xlab){
  ggplot(shap_interact$data, 
                                aes(y = shap, 
                                    x = shap_interact$data[,2], 
                                    fill = shap_interact$data[,3])) +
  geom_point(shape = 21, size = 3.5, colour = "black") + 
  scale_fill_gradientn(name = name, 
                       colours = RColorBrewer::brewer.pal(9, colour_pal)) +
  ylab("SHAP Value") + 
 # ylim(-0.1,0.23) +  
  xlab(xlab) +
  theme_param
}

shap_1_2_pdp_plot <- shap_pdp_plot_func(shap_1_2_plot, "WIP", 
                                        colour_pal = "YlGnBu",
                                        xlab = "Depth")

shap_2_3_pdp_plot <- shap_pdp_plot_func(shap_2_3_plot, 
                                        name = "PET:MAP", 
                                        colour_pal = "Reds",
                                        xlab = "WIP")
shap_lab_1_2_pdp_plot <- shap_pdp_plot_func(shap_lab_1_2_plot, 
                                            name = "pH", 
                                        colour_pal = "Blues",
                                        xlab = "Depth")

shap_lab_2_3_pdp_plot <- shap_pdp_plot_func(shap_lab_2_3_plot, 
                                        name = "Clay", 
                                        colour_pal = "Purples",
                                        xlab = "pH")

shap_interact_pdp <- (shap_1_2_pdp_plot + 
                        annotate("text", y = 0.08, x = -35, angle = 90,
                                 label = expression(SOC~Stock~g~cm^{2})) +
                        coord_cartesian(xlim = c(20,160),
                                        clip = "off") +
                        theme(plot.margin = unit(c(1,1,1,1.5), "lines"))) +
  shap_2_3_pdp_plot + 
  (shap_lab_1_2_pdp_plot + 
                        annotate("text", y = 0.08, x = -120, angle = 90,
                                 label = "SOC %") +
                        coord_cartesian(xlim = c(0,312),
                                        clip = "off") +
                        theme(plot.margin = unit(c(1,1,1,1.5), "lines"))) + 
  shap_lab_2_3_pdp_plot +
  plot_layout(nrow = 2, ncol = 2, axis_titles = "collect_y")  + 
  plot_annotation() & 
    theme(plot.tag = element_text(size = 8),
          plot.tag.position = c(0.1, 1))
shap_interact_pdp

saveRDS(shap_interact_pdp, file = "SOIL CARBON/All_WA/writing/Figures/shap_interact_pdp.rds")
```



```{r}
#| message: false
shap_fullmod_plots_form <- shap_lab_func(shap_fullmod_plots)
shap_fullmod_lab_plots_form <- shap_lab_func(shap_fullmod_lab_plots)



shap_full_mod_plot <- shap_fullmod_plots_form + 
    plot_layout(nrow = 2, ncol = 2, axis_titles = "collect", guides = "collect")  +
    plot_annotation(tag_levels = list(c("A.", "B.","C.", "D."))) & 
    theme(plot.tag = element_text(size = 8),
          plot.tag.position = c(0.1, 1)) &
  theme_param
shap_full_mod_lab_plot <- shap_fullmod_lab_plots_form + 
    plot_layout(nrow = 2, ncol = 2, axis_titles = "collect", guides = "collect")  +
    plot_annotation(tag_levels = list(c("A.", "B.","C.", "D."))) & 
    theme(plot.tag = element_text(size = 8),
          plot.tag.position = c(0.1, 1)) &
  theme_param


saveRDS(shap_full_mod_plot, "SOIL CARBON/All_WA/writing/Figures/shap_full_mod_plot.rds")
saveRDS(shap_full_mod_lab_plot, "SOIL CARBON/All_WA/writing/Figures/shap_full_mod_lab_plot.rds")

```


```{r}
lab_func <-  function(x) {
  subtitle_lab = if(is.null((x$results$.feature))){
    str_replace_all(str_extract(x$data$.feature, 
                ":lower_depth|:grad_1000|:WIP|:MAT|:Clay|:PET_MAP|:pH|:MAP")[1],
                           c(`:lower_depth` = "Depth",
                             `:grad_1000` = "Gradient 1000m",
                             `:WIP` = "WIP",
                             `:MAT` = "MAT",
                             `:Clay` = "Clay",
                             `:PET_MAP` = "PET::MAP",
                             `:pH` = "pH",
                             `:MAP` = "MAP"
                             ))
  } else {
    str_replace_all(str_extract(x$data$results$.feature, 
                ":lower_depth|:grad_1000|:WIP|:MAT|:Clay|:PET_MAP|:pH|:MAP")[1],
                           c(`:lower_depth` = "Depth",
                             `:grad_1000` = "Gradient 1000m",
                             `:WIP` = "WIP",
                             `:MAT` = "MAT",
                             `:Clay` = "Clay",
                             `:PET_MAP` = "PET::MAP",
                             `:pH` = "pH",
                             `:MAP` = "MAP"
                             ))
  }
  x + scale_y_discrete(labels = \(y) 
        str_replace_all(y, c(`:lower_depth` = "",
                             `:grad_1000` = "",
                             `:WIP` = "",
                             `:MAT` = "",
                             `:Clay` = "",
                             `:PET_MAP` = "",
                             `:pH` = "",
                             `:MAP` = "",
                             lower_depth = "Depth",
                             PET_MAP = "PET::MAP",
                             CHM = "Canopy Height",
                             LITH = "Geolithology",
                             DTM = "Elevation",
                             grad_1000 = "Gradient 1000m",
                             grad_300 = "Gradient 300m",
                             grad_50 = "Gradient 50m",
                             dev_1000 = "Deviation 1000m",
                             dev_300 = "Deviation 300m",
                             dev_50 = "Deviation 50m",
                             SiltClay = "Silt+Clay"
                             )),
        ) + 
    ggtitle(subtitle_lab) +
    scale_x_continuous(limits = c(0, 0.65)) +
    ylab("") +
    xlab("Interaction Strength")
  }

ia_1_plot <- plot(ia_1) |> lab_func() + theme_param
ia_2_plot <- plot(ia_2)|> lab_func() + theme_param
ia_3_plot <- plot(ia_3)|> lab_func() + theme_param
ia_4_plot <- plot(ia_4)|> lab_func() + theme_param
ia_5_plot <- plot(ia_5)|> lab_func() + theme_param

ia_lab_1_plot <- plot(ia_lab_1) |> lab_func() + theme_param
ia_lab_2_plot <- plot(ia_lab_2)|> lab_func() + theme_param
ia_lab_3_plot <- plot(ia_lab_3)|> lab_func() + theme_param
ia_lab_4_plot <- plot(ia_lab_4)|> lab_func() + theme_param
ia_lab_5_plot <- plot(ia_lab_5)|> lab_func() + theme_param


```

#### Interaction plots from Random Forest 
```{r}
#| fig-width: 6.5
#| out-width: "6.5"

ia_plots <- ia_1_plot + ia_2_plot + ia_3_plot + ia_4_plot +
  plot_layout(nrow = 1, ncol = 4, axis_titles = "collect", guides = "collect")  +
    plot_annotation() & 
    theme(plot.tag = element_text(size = 8),
          plot.tag.position = c(0.1, 1)) &
  theme_param

ia_plots

ia_lab_plots <- ia_lab_1_plot + ia_lab_2_plot + ia_lab_3_plot + ia_lab_4_plot +
  plot_layout(nrow = 1, ncol = 4, axis_titles = "collect", guides = "collect")  +
    plot_annotation() & 
    theme(plot.tag = element_text(size = 8),
          plot.tag.position = c(0.1, 1)) &
  theme_param

ia_lab_plots

ia_both_plots <- (ia_1_plot + ylab(expression(SOC~Stock~g~cm^{2}))) + 
  ia_2_plot + ia_3_plot + 
  (ia_lab_1_plot+ ylab("SOC %")) + ia_lab_2_plot + ia_lab_3_plot +
  plot_layout(nrow = 2, ncol = 3, axis_titles = "collect", guides = "collect")  +
    plot_annotation() & 
    theme(plot.tag = element_text(size = 8),
          plot.tag.position = c(0.1, 1)) &
  theme_param

ia_both_plots

```


```{r}
saveRDS(ia_plots, file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Interact_plot.rds")
saveRDS(ia_lab_plots, file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Interact_Lab_plot.rds")
saveRDS(ia_both_plots, file = "SOIL CARBON/All_WA/writing/Figures/MLR3_RFM_Interact_BothStocksPerc_plot.rds")

```





LMER Interactions

```{r}
library(pdp)

lmm_lab_int <- partial(lmm_lab, pred.var = c("pH", "PET_MAP"), train = trainlab,
                       type = "regression")

pdp::plotPartial(lmm_lab_int)

effects::effect("PET_MAP:pH", lmm_lab)
```
```{r}
library(interactions)

lmm_lab_ph_petmap_plot <- interact_plot(lmm_lab,
              pred = pH,
              modx = PET_MAP,
              data = trainlab_scale, jitter = 0,
              plot.points = TRUE,
              colors = "Reds", 
              y.label = expression(log[10] ~ "SOC %"),
              x.label = "Scaled pH",
              legend.main = "Scaled\nPET:MAP",
              point.alpha = 1)

saveRDS(lmm_lab_ph_petmap_plot, "SOIL CARBON/All_WA/writing/Figures/lmm_lab_ph_petmap_plot.rds")
```

